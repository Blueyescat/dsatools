{
  "version": 3,
  "sources": ["../../../src/BPCmd.ts", "../../../src/BuildBits.ts", "../../../src/constants.ts", "../../../src/BuildCmd.ts", "../../../src/types.ts", "../../../src/ConfigCmd.ts", "../../../src/Blueprint.ts", "../../../src/injBrowser.ts", "../../../src/Decoder.ts", "../../../src/Encoder.ts", "../../../src/util.ts", "../../../src/index.ts"],
  "sourcesContent": ["export abstract class BPCmd {\r\n\r\n\tabstract clone()\r\n\r\n\tabstract toArray(): any[]\r\n}\r\n", "/**\r\n * Used to specify repeated placements along the X+ axis in a single build command.\r\n * `101` = place 2 objects with a space between. Cannot exceed 64 bits.\r\n */\r\nexport class BuildBits {\r\n\r\n\tint: bigint\r\n\r\n\r\n\tconstructor(input?: string | number | bigint) {\r\n\t\tif (input == null) {\r\n\t\t\tthis.int = 0n\r\n\t\t\treturn\r\n\t\t}\r\n\t\tif (typeof input == \"string\") {\r\n\t\t\tinput = \"0b\" + reverse(input)\r\n\t\t} else if (typeof input != \"number\" && typeof input != \"bigint\") {\r\n\t\t\tthrow new TypeError(\"input must be a number, bigint or string\")\r\n\t\t}\r\n\t\tthis.int = BigInt(input)\r\n\t}\r\n\r\n\r\n\tset(index: number): this {\r\n\t\tif (index < 0 || index > 63) throw new RangeError(\"index must be between [0,63]\")\r\n\t\tthis.int |= mask(index)\r\n\t\treturn this\r\n\t}\r\n\r\n\r\n\tclear(index: number): this {\r\n\t\tif (index < 0 || index > 63) throw new RangeError(\"index must be between [0,63]\")\r\n\t\tthis.int &= ~mask(index)\r\n\t\treturn this\r\n\t}\r\n\r\n\r\n\ttoggle(index: number, force?: boolean): this {\r\n\t\tif (index < 0 || index > 63) throw new RangeError(\"index must be between [0,63]\")\r\n\t\tif (typeof force == \"undefined\")\r\n\t\t\tthis.int ^= mask(index)\r\n\t\telse if (force === true)\r\n\t\t\tthis.set(index)\r\n\t\telse if (force === false)\r\n\t\t\tthis.clear(index)\r\n\t\treturn this\r\n\t}\r\n\r\n\r\n\tisSet(index: number): boolean {\r\n\t\tif (index < 0 || index > 63) return false\r\n\t\treturn !!(this.int & mask(index))\r\n\t}\r\n\r\n\r\n\tisZero(): boolean {\r\n\t\treturn this.int == 0n\r\n\t}\r\n\r\n\r\n\tisOne(): boolean {\r\n\t\treturn this.int == 1n\r\n\t}\r\n\r\n\r\n\ttrimLeadZeros(): this {\r\n\t\tif (this.int)\r\n\t\t\tthis.int /= -this.int & this.int\r\n\t\treturn this\r\n\t}\r\n\r\n\r\n\tget size(): number {\r\n\t\treturn this.int.toString(2).length\r\n\t}\r\n\r\n\t*[Symbol.iterator](): Iterator<boolean> {\r\n\t\tfor (const b of reverse(this.int.toString(2))) {\r\n\t\t\tyield b == \"1\"\r\n\t\t}\r\n\t}\r\n\r\n\r\n\ttoArray(): boolean[] {\r\n\t\treturn Array.from(this)\r\n\t}\r\n\r\n\r\n\ttoString(): string {\r\n\t\treturn reverse(this.int.toString(2))\r\n\t}\r\n\r\n\r\n\tget [Symbol.toStringTag]() {\r\n\t\treturn this.toString()\r\n\t}\r\n\r\n\r\n\tequals(target: BuildBits) {\r\n\t\treturn this.int === target?.int\r\n\t}\r\n\r\n\r\n\tclone(): BuildBits {\r\n\t\treturn Object.assign(Object.create(Object.getPrototypeOf(this)), this)\r\n\t}\r\n}\r\n\r\nfunction mask(i: number) {\r\n\treturn 1n << BigInt(i)\r\n}\r\n\r\nfunction reverse(str: string) {\r\n\tif (str.length < 1) return str\r\n\treturn str.split(\"\").reduce((r, c) => c + r)\r\n}\r\n", "export const PREFIX = \"DSA:\"\r\n\r\n/** @hidden */\r\nexport const enum TAG {\r\n\tU8 = 0x80,\r\n\tU16 = 0x81,\r\n\tU32 = 0x82,\r\n\tU64 = 0x83,\r\n\tI8 = 0x84,\r\n\tI16 = 0x85,\r\n\tI32 = 0x86,\r\n\tI64 = 0x87,\r\n\tF32 = 0x88,\r\n\tF64 = 0x89,\r\n\tSTR_L1 = 0x8A,\r\n\tSTR_L2 = 0x8B,\r\n\tSTR_L4 = 0x8C,\r\n\tTRUE = 0x8D,\r\n\tFALSE = 0x8E,\r\n\tNULL = 0x8F,\r\n\tARRAY_BEGIN = 0x90,\r\n\tARRAY_END = 0x91,\r\n\tBYTES_L1 = 0x94,\r\n\tBYTES_L2 = 0x95,\r\n\tBYTES_L4 = 0x96\r\n}\r\n\r\n/** @hidden */\r\nexport const enum BlueprintIndex {\r\n\tVER,\r\n\tWIDTH,\r\n\tHEIGHT,\r\n\tCMDS\r\n}\r\n\r\n/** @hidden */\r\nexport const enum CmdType {\r\n\tBUILD,\r\n\tCONFIG\r\n}\r\n\r\n/** @hidden */\r\nexport const enum CfgMsgKey {\r\n\tFILTER_CONFIG = \"filter_config\",\r\n\tFILTER_ITEMS = \"filter_items\",\r\n\tANGLE = \"angle\",\r\n\tANGLE_FIXED = \"angle_fixed\",\r\n\tPUSHER = \"config_pusher\",\r\n\tLOADER = \"config_loader\"\r\n}\r\n\r\n/** @hidden */\r\nexport const enum BuildCmdIndex {\r\n\tTYPE,\r\n\tX,\r\n\tY,\r\n\tITEM,\r\n\tBITS,\r\n\tSHAPE\r\n}\r\n\r\n/** @hidden */\r\nexport const enum ConfigCmdIndex {\r\n\tTYPE,\r\n\tDATA\r\n}\r\n\r\n/** @hidden */\r\nexport const enum PusherCfgIndex {\r\n\tDEFAULT_MODE,\r\n\tFILTERED_MODE,\r\n\tANGLE,\r\n\tTARGET_SPEED,\r\n\tFILTER_BY_INVENTORY,\r\n\tMAX_BEAM_LENGTH\r\n}\r\n\r\n/** @hidden */\r\nexport const enum LoaderCfgIndex {\r\n\tPICKUP_POINT,\r\n\tDROP_POINT,\r\n\tPRIORTY,\r\n\tSTACK_LIMIT,\r\n\tCYCLE_TIME,\r\n\tREQUIRE_OUTPUT_INVENTORY,\r\n\tWAIT_FOR_STACK_LIMIT\r\n}\r\n", "import { BPCmd } from \"./BPCmd.js\"\r\nimport { BuildBits } from \"./BuildBits.js\"\r\nimport { CmdType, BuildCmdIndex as Index } from \"./constants.js\"\r\nimport { BuildCmdOptions } from \"./types.js\"\r\n\r\nexport class BuildCmd extends BPCmd implements BuildCmdOptions {\r\n\r\nx: BuildCmdOptions[\"x\"]\r\ny: BuildCmdOptions[\"y\"]\r\nitem: BuildCmdOptions[\"item\"]\r\nbits: BuildCmdOptions[\"bits\"]\r\nshape: BuildCmdOptions[\"shape\"]\r\n\r\n\tconstructor(input?: BuildCmdOptions) {\r\n\t\tsuper()\r\n\t\tfor (const prop in this)\r\n\t\t\tObject.defineProperty(this, prop, { configurable: false })\r\n\t\tif (input != null) {\r\n\t\t\tif (Object.getPrototypeOf(input) != Object.prototype)\r\n\t\t\t\tthrow new TypeError(\"input must be an Object literal\")\r\n\t\t\tthis.set(input)\r\n\t\t}\r\n\t}\r\n\r\n\r\n\tset(input: BuildCmdOptions): this {\r\n\t\treturn Object.assign(this, input)\r\n\t}\r\n\r\n\r\n\tfillFromArray(arr: any[]) {\r\n\t\tthis.x = arr[Index.X]\r\n\t\tthis.y = arr[Index.Y]\r\n\t\tthis.item = arr[Index.ITEM]\r\n\t\tthis.bits = typeof arr[Index.BITS] != \"undefined\" ? new BuildBits(arr[Index.BITS]) : undefined\r\n\t\tthis.shape = arr[Index.SHAPE]\r\n\t\treturn this\r\n\t}\r\n\r\n\r\n\ttoArray() {\r\n\t\tconst arr = []\r\n\t\tarr[Index.TYPE] = CmdType.BUILD\r\n\r\n\t\tif (this.x !== undefined)\r\n\t\t\tarr[Index.X] = this.x\r\n\r\n\t\tif (this.y !== undefined)\r\n\t\t\tarr[Index.Y] = this.y\r\n\r\n\t\tif (this.item !== undefined)\r\n\t\t\tarr[Index.ITEM] = this.item\r\n\r\n\t\tif (this.bits !== undefined)\r\n\t\t\tarr[Index.BITS] = this.bits.int\r\n\r\n\t\tif (this.shape !== undefined && this.shape != 0) { // ignore shape if 0 (game default)\r\n\t\t\tarr[Index.SHAPE] = this.shape\r\n\r\n\t\t\tif (typeof arr[Index.BITS] == \"undefined\") // can't have shape without bits\r\n\t\t\t\tarr[Index.BITS] = 1n\r\n\t\t}\r\n\t\treturn arr\r\n\t}\r\n\r\n\tclone(): BuildCmd {\r\n\t\tconst clone = Object.assign(Object.create(Object.getPrototypeOf(this)), this)\r\n\t\tif (this.bits)\r\n\t\t\tclone.bits = this.bits.clone()\r\n\t\treturn clone\r\n\t}\r\n}\r\n", "import { BPCmd } from \"./BPCmd.js\"\r\nimport { BuildBits } from \"./BuildBits.js\"\r\n\r\n/** The mode of a pusher config. */\r\nexport enum PusherMode {\r\n\tPUSH,\r\n\tPULL,\r\n\tDO_NOTHING\r\n}\r\n\r\n/** The pickup or drop point of a loader config. */\r\nexport enum LoaderPoint {\r\n\tTOP_LEFT,\r\n\tTOP,\r\n\tTOP_RIGHT,\r\n\tLEFT,\r\n\tRIGHT,\r\n\tBOTTOM_LEFT,\r\n\tBOTTOM,\r\n\tBOTTOM_RIGHT\r\n}\r\n\r\n/** The priority of a loader config. */\r\nexport enum LoaderPriority {\r\n\tLOW,\r\n\tNORMAL,\r\n\tHIGH\r\n}\r\n\r\n/** The mode of a filter config. */\r\nexport enum FilterMode {\r\n\tALLOW_ALL,\r\n\tBLOCK_FILTER_ONLY,\r\n\tALLOW_FILTER_ONLY,\r\n\tBLOCK_ALL\r\n}\r\n\r\nexport enum FixedAngle {\r\n\tRIGHT,\r\n\tUP,\r\n\tLEFT,\r\n\tDOWN\r\n}\r\n\r\nexport interface DecoderOptions {\r\n\r\n\tignoreConfigCmdData?: boolean\r\n}\r\n\r\n/**\r\n * All the properties can be set, and are required for a valid blueprint.\r\n */\r\nexport interface BlueprintOptions {\r\n\r\n\tversion?: number\r\n\r\n\twidth?: number\r\n\r\n\theight?: number\r\n\r\n\tcommands?: Array<BPCmd>\r\n}\r\n\r\n/**\r\n * All the properties can be set. Set to `undefined` to remove a property. {@link x}, {@link y}, {@link item} are required for a valid command.\r\n */\r\nexport interface BuildCmdOptions {\r\n\r\n\tx?: number\r\n\r\n\ty?: number\r\n\r\n\titem?: number\r\n\r\n\tbits?: BuildBits\r\n\r\n\tshape?: number\r\n}\r\n\r\n/**\r\n * All the properties can be set. Set to `undefined` to remove a property, `null` to use {@link ConfigCmd.defaults} during encoding.\r\n * @example\r\n * new ConfigCmd() // empty config\r\n * new ConfigCmd({ loader: null }) // default loader config\r\n * new ConfigCmd({ loader: { dropPoint: LoaderPoint.BOTTOM } }) // loader config with drop point bottom, rest default\r\n * cmd.loader.priority = null // change priority of existing loader config to default\r\n */\r\nexport interface ConfigCmdOptions {\r\n\r\n\tfilterMode?: FilterMode,\r\n\r\n\tfilterItems?: [number, number, number],\r\n\r\n\tangle?: number,\r\n\r\n\tfixedAngle?: FixedAngle,\r\n\r\n\tpusher?: PusherConfig,\r\n\r\n\tloader?: LoaderConfig\r\n}\r\n\r\n/**\r\n * All the properties can be set. Set to `undefined` to remove a property, `null` to use {@link ConfigCmd.defaults} during encoding.\r\n */\r\nexport interface LoaderConfig {\r\n\r\n\tpickupPoint?: LoaderPoint,\r\n\r\n\tdropPoint?: LoaderPoint,\r\n\r\n\tpriority?: LoaderPriority,\r\n\r\n\tstackLimit?: number,\r\n\r\n\tcycleTime?: number,\r\n\r\n\trequireOutputInventory?: boolean,\r\n\r\n\twaitForStackLimit?: boolean\r\n}\r\n\r\n/**\r\n * All the properties can be set. Set to `undefined` to remove a property, `null` to use {@link ConfigCmd.defaults} during encoding.\r\n */\r\nexport interface PusherConfig {\r\n\r\n\tdefaultMode?: PusherMode,\r\n\r\n\tfilteredMode?: PusherMode,\r\n\r\n\tangle?: number,\r\n\r\n\ttargetSpeed?: number,\r\n\r\n\tfilterByInventory?: boolean,\r\n\r\n\tmaxBeamLength?: number\r\n}\r\n", "import { BPCmd } from \"./BPCmd.js\"\r\nimport { CfgMsgKey, CmdType, ConfigCmdIndex as Index, LoaderCfgIndex, PusherCfgIndex } from \"./constants.js\"\r\nimport {\r\n\tConfigCmdOptions, FilterMode, FixedAngle, LoaderConfig,\r\n\tLoaderPoint, LoaderPriority, PusherConfig, PusherMode\r\n} from \"./types.js\"\r\n\r\nlet defaults: Required<ConfigCmdOptions> = {\r\n\tfilterMode: FilterMode.ALLOW_ALL,\r\n\tfilterItems: [0, 0, 0],\r\n\tangle: 0,\r\n\tfixedAngle: FixedAngle.RIGHT,\r\n\tpusher: {\r\n\t\tdefaultMode: PusherMode.DO_NOTHING,\r\n\t\tfilteredMode: PusherMode.PUSH,\r\n\t\tangle: 0,\r\n\t\ttargetSpeed: 20,\r\n\t\tfilterByInventory: false,\r\n\t\tmaxBeamLength: 1000\r\n\t},\r\n\tloader: {\r\n\t\tpickupPoint: LoaderPoint.LEFT,\r\n\t\tdropPoint: LoaderPoint.RIGHT,\r\n\t\tpriority: LoaderPriority.NORMAL,\r\n\t\tstackLimit: 16,\r\n\t\tcycleTime: 20,\r\n\t\trequireOutputInventory: false,\r\n\t\twaitForStackLimit: false\r\n\t}\r\n}\r\n\r\nconst msgKey_prop: { [K in typeof CfgMsgKey[keyof typeof CfgMsgKey]]: keyof ConfigCmdOptions } = {\r\n\tfilter_config: \"filterMode\",\r\n\tfilter_items: \"filterItems\",\r\n\tangle: \"angle\",\r\n\tangle_fixed: \"fixedAngle\",\r\n\tconfig_pusher: \"pusher\",\r\n\tconfig_loader: \"loader\"\r\n}\r\nfor (const key in msgKey_prop) { msgKey_prop[msgKey_prop[key]] = key }\r\n\r\nexport class ConfigCmd extends BPCmd implements ConfigCmdOptions {\r\n\r\n\tstatic get defaults() {\r\n\t\treturn defaults\r\n\t}\r\n\tstatic set defaults(input) {\r\n\t\tif (input != null && Object.getPrototypeOf(input) != Object.prototype)\r\n\t\t\tthrow new TypeError(\"defaults can only be set to an Object literal\")\r\n\t\tdefaults = input\r\n\t}\r\n\r\nrawData: Uint8Array\r\n\r\nfilterMode: ConfigCmdOptions[\"filterMode\"]\r\nfilterItems: ConfigCmdOptions[\"filterItems\"]\r\nangle: ConfigCmdOptions[\"angle\"]\r\nfixedAngle: ConfigCmdOptions[\"fixedAngle\"]\r\npusher: ConfigCmdOptions[\"pusher\"] = {}\r\nloader: ConfigCmdOptions[\"loader\"] = {}\r\n\r\n\r\n\tconstructor(input?: ConfigCmdOptions) {\r\n\t\tsuper()\r\n\t\tfor (const prop in this)\r\n\t\t\tObject.defineProperty(this, prop, { configurable: false })\r\n\t\tif (input != null) {\r\n\t\t\tif (Object.getPrototypeOf(input) != Object.prototype)\r\n\t\t\t\tthrow new TypeError(\"input must be an Object literal\")\r\n\t\t\tthis.set(input)\r\n\t\t}\r\n\t}\r\n\r\n\r\n\tset(input: ConfigCmdOptions): this {\r\n\t\treturn Object.assign(this, input)\r\n\t}\r\n\r\n\r\n\tfillFromArray(arr: any[]) {\r\n\t\tif (arr[Index.DATA] == null)\r\n\t\t\treturn this\r\n\r\n\t\tif (arr[Index.DATA] instanceof Uint8Array)\r\n\t\t\treturn this.rawData = arr[Index.DATA], this\r\n\r\n\t\tarr = arr[Index.DATA]\r\n\r\n\t\tfor (let i = 0; i < arr.length; i++) {\r\n\t\t\tif (i <= 1) continue // ignore first 2 zeros, unknown\r\n\t\t\tif (typeof arr[i] == \"string\" // assume a string = key\r\n\t\t\t\t&& arr[i + 1] === 0 // assume following 0 means value next\r\n\t\t\t) {\r\n\t\t\t\tconst msgKey = arr[i]\r\n\t\t\t\tlet val = arr[i + 2]\r\n\r\n\t\t\t\tif (Array.isArray(val))\r\n\t\t\t\t\tval = cfgArrToObj(msgKey, val) ?? val\r\n\r\n\t\t\t\tthis[msgKey_prop[msgKey] ?? msgKey] = val\r\n\t\t\t\ti += 2\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn this\r\n\t}\r\n\r\n\r\n\tfillDataFromArray(data: any[]) {\r\n\t\tconst arr = []\r\n\t\tarr[Index.TYPE] = CmdType.CONFIG\r\n\t\tarr[Index.DATA] = data\r\n\t\treturn this.fillFromArray(arr)\r\n\t}\r\n\r\n\r\n\ttoArray() {\r\n\t\tconst arr = []\r\n\t\tarr[Index.TYPE] = CmdType.CONFIG\r\n\r\n\t\tif (this.isRaw) {\r\n\t\t\tarr[Index.DATA] = this.rawData\r\n\t\t\treturn arr\r\n\t\t}\r\n\r\n\t\t// follows the same format commented in fillFromArray\r\n\t\tarr[Index.DATA] = [0, 0]\r\n\t\tfor (const prop of Object.keys(this)) {\r\n\t\t\tlet val = structuredClone(this[prop])\r\n\t\t\tconst msgKey = msgKey_prop[prop] ?? prop\r\n\r\n\t\t\tif (val === undefined) continue // undefined values meant to be excluded\r\n\t\t\tif (val === null || Object.getPrototypeOf(val) == Object.prototype) {\r\n\t\t\t\tif (val !== null && !Object.keys(val).length)\r\n\t\t\t\t\tcontinue // ignore empty objects\r\n\t\t\t\tval = cfgObjToArr(msgKey, val)\r\n\t\t\t} else if (!Array.isArray(val)) {\r\n\t\t\t\tval = [val]\r\n\t\t\t}\r\n\t\t\tarr[Index.DATA].push(msgKey, 0, val)\r\n\t\t}\r\n\t\treturn arr\r\n\t}\r\n\r\n\r\n\tget isRaw() {\r\n\t\treturn this.rawData instanceof Uint8Array\r\n\t}\r\n\r\n\r\n\tequals(target: ConfigCmd) {\r\n\t\treturn deepEquals(this, target)\r\n\t}\r\n\r\n\tclone(): ConfigCmd {\r\n\t\tconst clone = Object.assign(Object.create(Object.getPrototypeOf(this)), this)\r\n\t\tif (this.rawData)\r\n\t\t\tclone.rawData = new Uint8Array(this.rawData)\r\n\t\treturn clone\r\n\t}\r\n}\r\n\r\nfunction deepEquals(a, b): boolean {\r\n\tif (a === b) return true\r\n\tif (a?.constructor !== b?.constructor) return false\r\n\tconst keysA = Object.keys(a)\r\n\treturn a && b\r\n\t\t&& typeof a === \"object\" && typeof b === \"object\"\r\n\t\t? (keysA.length === Object.keys(b).length\r\n\t\t\t&& keysA.every(key => deepEquals(a[key], b[key])))\r\n\t\t: a === b\r\n}\r\n\r\nfunction cfgArrToObj(key: string, arr: any[]) {\r\n\tswitch (key) {\r\n\t\tcase CfgMsgKey.FILTER_CONFIG:\r\n\t\tcase CfgMsgKey.ANGLE:\r\n\t\tcase CfgMsgKey.ANGLE_FIXED:\r\n\t\t\treturn arr[0]\r\n\t\tcase CfgMsgKey.FILTER_ITEMS:\r\n\t\t\treturn arr\r\n\t\tcase CfgMsgKey.LOADER:\r\n\t\t\treturn {\r\n\t\t\t\tpickupPoint: arr[LoaderCfgIndex.PICKUP_POINT],\r\n\t\t\t\tdropPoint: arr[LoaderCfgIndex.DROP_POINT],\r\n\t\t\t\tpriority: arr[LoaderCfgIndex.PRIORTY],\r\n\t\t\t\tstackLimit: arr[LoaderCfgIndex.STACK_LIMIT],\r\n\t\t\t\tcycleTime: arr[LoaderCfgIndex.CYCLE_TIME],\r\n\t\t\t\trequireOutputInventory: arr[LoaderCfgIndex.REQUIRE_OUTPUT_INVENTORY],\r\n\t\t\t\twaitForStackLimit: arr[LoaderCfgIndex.WAIT_FOR_STACK_LIMIT],\r\n\t\t\t}\r\n\t\tcase CfgMsgKey.PUSHER:\r\n\t\t\treturn {\r\n\t\t\t\tdefaultMode: arr[PusherCfgIndex.DEFAULT_MODE],\r\n\t\t\t\tfilteredMode: arr[PusherCfgIndex.FILTERED_MODE],\r\n\t\t\t\tangle: arr[PusherCfgIndex.ANGLE],\r\n\t\t\t\ttargetSpeed: arr[PusherCfgIndex.TARGET_SPEED],\r\n\t\t\t\tfilterByInventory: arr[PusherCfgIndex.FILTER_BY_INVENTORY],\r\n\t\t\t\tmaxBeamLength: arr[PusherCfgIndex.MAX_BEAM_LENGTH],\r\n\t\t\t}\r\n\t}\r\n}\r\n\r\nfunction cfgObjToArr(key: string, obj: LoaderConfig | PusherConfig) {\r\n\tconst a = []\r\n\tif (obj !== null) { // delete props that are set to null, so they will be overwritten\r\n\t\tfor (const key in obj)\r\n\t\t\tif (obj[key] === null)\r\n\t\t\t\tdelete obj[key]\r\n\t}\r\n\tswitch (key) {\r\n\t\tcase CfgMsgKey.LOADER:\r\n\t\t\tobj = { ...defaults.loader, ...obj } as LoaderConfig\r\n\t\t\ta[LoaderCfgIndex.PICKUP_POINT] = obj.pickupPoint\r\n\t\t\ta[LoaderCfgIndex.DROP_POINT] = obj.dropPoint\r\n\t\t\ta[LoaderCfgIndex.PRIORTY] = obj.priority\r\n\t\t\ta[LoaderCfgIndex.STACK_LIMIT] = obj.stackLimit\r\n\t\t\ta[LoaderCfgIndex.CYCLE_TIME] = obj.cycleTime\r\n\t\t\ta[LoaderCfgIndex.REQUIRE_OUTPUT_INVENTORY] = obj.requireOutputInventory\r\n\t\t\ta[LoaderCfgIndex.WAIT_FOR_STACK_LIMIT] = obj.waitForStackLimit\r\n\t\t\tbreak\r\n\t\tcase CfgMsgKey.PUSHER: {\r\n\t\t\tobj = { ...defaults.pusher, ...obj } as PusherConfig\r\n\t\t\ta[PusherCfgIndex.DEFAULT_MODE] = obj.defaultMode\r\n\t\t\ta[PusherCfgIndex.FILTERED_MODE] = obj.filteredMode\r\n\t\t\ta[PusherCfgIndex.ANGLE] = obj.angle\r\n\t\t\ta[PusherCfgIndex.TARGET_SPEED] = obj.targetSpeed\r\n\t\t\ta[PusherCfgIndex.FILTER_BY_INVENTORY] = obj.filterByInventory\r\n\t\t\ta[PusherCfgIndex.MAX_BEAM_LENGTH] = obj.maxBeamLength\r\n\t\t\tbreak\r\n\t\t}\r\n\t}\r\n\treturn a\r\n}\r\n", "import { BuildCmd } from \"./BuildCmd.js\"\r\nimport { ConfigCmd } from \"./ConfigCmd.js\"\r\nimport { BuildCmdIndex, CmdType, ConfigCmdIndex, BlueprintIndex as Index } from \"./constants.js\"\r\nimport { BlueprintOptions } from \"./types.js\"\r\n\r\n// Should use Required<> but docs won't be inherited..\r\nexport class Blueprint implements BlueprintOptions {\r\n\r\nversion: BlueprintOptions[\"version\"]\r\nwidth: BlueprintOptions[\"width\"]\r\nheight: BlueprintOptions[\"height\"]\r\ncommands: BlueprintOptions[\"commands\"]\r\n\r\n\r\n\tconstructor(input?: BlueprintOptions) {\r\n\t\tfor (const prop in this)\r\n\t\t\tObject.defineProperty(this, prop, { configurable: false })\r\n\t\tif (typeof input == \"undefined\") {\r\n\t\t\tthis.version = 0\r\n\t\t\tthis.width = 1\r\n\t\t\tthis.height = 1\r\n\t\t\tthis.commands = []\r\n\t\t} else if (input != null && Object.getPrototypeOf(input) == Object.prototype) {\r\n\t\t\tthis.version = input.version ?? 0\r\n\t\t\tthis.width = input.width ?? 1\r\n\t\t\tthis.height = input.height ?? 1\r\n\t\t\tif (input.commands != null) {\r\n\t\t\t\tif (!Array.isArray(input.commands))\r\n\t\t\t\t\tthrow new TypeError(\"input.commands must be an array\")\r\n\t\t\t\tthis.commands = input.commands\r\n\t\t\t} else {\r\n\t\t\t\tthis.commands = []\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tthrow new TypeError(\"input must be an Object literal\")\r\n\t\t}\r\n\t}\r\n\r\n\r\n\tset(input: BlueprintOptions): this {\r\n\t\treturn Object.assign(this, input)\r\n\t}\r\n\r\n\r\n\tfillFromArray(arr: any[], shallow?: boolean) {\r\n\t\tthis.version = arr[Index.VER]\r\n\t\tthis.width = arr[Index.WIDTH]\r\n\t\tthis.height = arr[Index.HEIGHT]\r\n\t\tthis.commands = shallow ? arr[Index.CMDS]\r\n\t\t\t: arr[Index.CMDS].map(cmd => {\r\n\t\t\t\tif (cmd[BuildCmdIndex.TYPE] == CmdType.BUILD)\r\n\t\t\t\t\treturn new BuildCmd().fillFromArray(cmd)\r\n\t\t\t\tif (cmd[ConfigCmdIndex.TYPE] == CmdType.CONFIG)\r\n\t\t\t\t\treturn new ConfigCmd().fillFromArray(cmd)\r\n\t\t\t})\r\n\t\treturn this\r\n\t}\r\n\r\n\r\n\ttoArray(shallow?: boolean) {\r\n\t\tconst arr = []\r\n\t\tarr[Index.VER] = this.version\r\n\t\tarr[Index.WIDTH] = this.width\r\n\t\tarr[Index.HEIGHT] = this.height\r\n\t\tarr[Index.CMDS] = shallow ? this.commands : this.commands.map(c => c.toArray())\r\n\t\treturn arr\r\n\t}\r\n\r\n\r\n\tclone(): Blueprint {\r\n\t\tconst clone = Object.assign(Object.create(Object.getPrototypeOf(this)), this)\r\n\t\tif (this.commands)\r\n\t\t\tclone.commands = this.commands.map(c => c.clone())\r\n\t\treturn clone\r\n\t}\r\n}\r\n", "export const b64toUi8 = (str: string) => Uint8Array.from(atob(str), c => c.charCodeAt(0))\r\n\r\nexport const ui8tob64 = (ui8: Uint8Array) => btoa(String.fromCharCode.apply(null, ui8))\r\n\r\nexport function createWorker() {\r\n\tconst insideWorker = async info => {\r\n\t\tlet lib: typeof import(\".\") // eslint-disable-line\r\n\t\tself.addEventListener(\"message\", async (e: MessageEvent) => {\r\n\t\t\tconst data = e.data\r\n\t\t\twhile (!lib) await new Promise(r => setTimeout(r, 0))\r\n\t\t\t//\r\n\t\t\tif (data.cmd == \"decode\") {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tdata.result = new lib.Decoder().decodeSync(data.args.input, data.args.options)\r\n\t\t\t\t\t\t.toArray()\r\n\t\t\t\t} catch (err) {\r\n\t\t\t\t\tdata.err = err\r\n\t\t\t\t}\r\n\t\t\t\tdelete data.args\r\n\t\t\t\tself.postMessage(data)\r\n\t\t\t} else if (data.cmd == \"decodeConfigCmd\") {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tdata.result = new lib.Decoder().decodeConfigCmdData(data.args.rawData)\r\n\t\t\t\t} catch (err) {\r\n\t\t\t\t\tdata.err = err\r\n\t\t\t\t}\r\n\t\t\t\tdelete data.args\r\n\t\t\t\tself.postMessage(data)\r\n\t\t\t} else if (data.cmd == \"encode\") {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tconst bp = new lib.Blueprint().fillFromArray(data.args.input)\r\n\t\t\t\t\tdata.result = new lib.Encoder().encodeSync(bp)\r\n\t\t\t\t} catch (err) {\r\n\t\t\t\t\tdata.err = err\r\n\t\t\t\t}\r\n\t\t\t\tdelete data.args\r\n\t\t\t\tself.postMessage(data)\r\n\t\t\t}\r\n\t\t\t//\r\n\t\t})\r\n\t\tif (info.bundleInfo.format == \"iife\") {\r\n\t\t\timportScripts(info.path)\r\n\t\t\tlib = globalThis[info.bundleInfo.globalName]\r\n\t\t} else lib = await import(info.path)\r\n\t}\r\n\r\n\tconst workerData = {\r\n\t\tpath: import.meta.url,\r\n\t\tbundleInfo: {format:\"esm\",globalName:\"dsabp\"}\r\n\t}\r\n\treturn new Worker(URL.createObjectURL(new Blob([\r\n\t\t`(${insideWorker.toString()})(${JSON.stringify(workerData)})`\r\n\t], { type: \"text/javascript;charset=utf-8\" })))\r\n}\r\n", "\r\nimport { inflateSync as fflate_inflateSync } from \"fflate\" // @build_browser-only\r\n\r\nimport { Blueprint } from \"./Blueprint.js\"\r\nimport { BuildCmd } from \"./BuildCmd.js\"\r\nimport { ConfigCmd } from \"./ConfigCmd.js\"\r\nimport { BuildCmdIndex, CmdType, ConfigCmdIndex, PREFIX, TAG } from \"./constants.js\"\r\nimport { b64toUi8 } from \"./injBrowser.js\" // @build_browser-only\r\nimport { DecoderOptions } from \"./types.js\"\r\n\r\nconst enum ArrType {\r\n\tNONE,\r\n\tUNKNOWN,\r\n\tTOP,\r\n\tCMDS,\r\n\tCMD,\r\n\tCFG\r\n}\r\n\r\nconst arrTypeMap = {\r\n\t[ArrType.NONE]: ArrType.TOP,\r\n\t[ArrType.TOP]: ArrType.CMDS,\r\n\t[ArrType.CMDS]: ArrType.CMD,\r\n\t[ArrType.CMD]: ArrType.CFG,\r\n}\r\n\r\n/**\r\n * Internally created by the {@link decode}, {@link decodeSync}, {@link decodeConfigCmd} and {@link decodeConfigCmdSync} functions.\r\n * \r\n * There doesn't seem to be any benefit to using the same instance,\r\n * but it is possible to do so only with the sync methods.\r\n */\r\nexport class Decoder {\r\n\t#textDecoder: TextDecoder\r\n\t#bytes: Uint8Array\r\n\t#view: DataView\r\n\t#pos: number\r\n\t#lastArrType: number\r\n\toptions: DecoderOptions\r\n\r\n\tconstructor() {\r\n\t\tthis.#textDecoder = new TextDecoder(\"utf-8\")\r\n\t}\r\n\r\n\r\n\t#init(buff: Buffer | Uint8Array, lastArrType: ArrType) {\r\n\t\tthis.#bytes = new Uint8Array(buff)\r\n\t\tthis.#view = new DataView(buff.buffer)\r\n\t\tthis.#pos = 0\r\n\t\tthis.#lastArrType = lastArrType ?? ArrType.NONE\r\n\t}\r\n\r\n\r\n\tdecodeSync(input: string, options: DecoderOptions = {}): Blueprint {\r\n\t\tif (typeof input != \"string\")\r\n\t\t\tthrow new TypeError(\"input must be a string\")\r\n\r\n\t\tif (input.substring(0, PREFIX.length).toUpperCase() == PREFIX)\r\n\t\t\tinput = input.substring(PREFIX.length)\r\n\r\n\t\tif (typeof options.ignoreConfigCmdData == \"undefined\")\r\n\t\t\toptions.ignoreConfigCmdData = false\r\n\t\tthis.options = options\r\n\r\n\t\tlet inflated: Buffer | Uint8Array\r\n\t\tif (typeof zlib_inflateRawSync != \"undefined\") {\r\n\t\t\tconst b64decoded = Buffer.from(input, \"base64\")\r\n\t\t\tinflated = zlib_inflateRawSync(b64decoded)\r\n\t\t} else {\r\n\t\t\tconst b64decoded = b64toUi8(input)\r\n\t\t\tinflated = fflate_inflateSync(b64decoded)\r\n\t\t}\r\n\t\tthis.#init(inflated, ArrType.NONE)\r\n\t\treturn new Blueprint().fillFromArray(this.#read(), true)\r\n\t}\r\n\r\n\r\n\tdecodeConfigCmdSync(cmd: ConfigCmd) {\r\n\t\tif (!(cmd instanceof ConfigCmd))\r\n\t\t\tthrow new TypeError(`input must be a ${ConfigCmd.name}`)\r\n\t\tif (!cmd.isRaw) return cmd\r\n\t\tconst dataArr = this.decodeConfigCmdData(cmd.rawData)\r\n\t\tcmd.rawData = undefined\r\n\t\treturn cmd.fillDataFromArray(dataArr)\r\n\t}\r\n\r\n\r\n\tdecodeConfigCmdData(rawCmd: Uint8Array) {\r\n\t\tthis.#init(rawCmd, ArrType.CMD)\r\n\t\treturn this.#read()\r\n\t}\r\n\r\n\t#read() {\r\n\t\twhile (this.#pos < this.#bytes.length) {\r\n\t\t\tconst b = this.#bytes[this.#pos++]\r\n\t\t\tif (b <= 63) return b // positive fixint\r\n\t\t\tif (b <= 127) return b - 128 // negative fixint\r\n\t\t\tswitch (b) {\r\n\t\t\t\tcase TAG.ARRAY_BEGIN: return this.#readArray()\r\n\t\t\t\tcase TAG.U8: return this.#readU8()\r\n\t\t\t\tcase TAG.U16: return this.#readU16()\r\n\t\t\t\tcase TAG.U32: return this.#readU32()\r\n\t\t\t\tcase TAG.U64: return this.#readU64()\r\n\t\t\t\tcase TAG.I8: return this.#readI8()\r\n\t\t\t\tcase TAG.I16: return this.#readI16()\r\n\t\t\t\tcase TAG.I32: return this.#readI32()\r\n\t\t\t\tcase TAG.I64: return this.#readI64()\r\n\t\t\t\tcase TAG.F32: return this.#readF32()\r\n\t\t\t\tcase TAG.F64: return this.#readF64()\r\n\t\t\t\tcase TAG.NULL: return null\r\n\t\t\t\tcase TAG.TRUE: return true\r\n\t\t\t\tcase TAG.FALSE: return false\r\n\t\t\t\tcase TAG.BYTES_L1: return this.#readBytes(this.#getU8(), 1)\r\n\t\t\t\tcase TAG.BYTES_L2: return this.#readBytes(this.#getU16(), 2)\r\n\t\t\t\tcase TAG.BYTES_L4: return this.#readBytes(this.#getU32(), 4)\r\n\t\t\t\tcase TAG.STR_L1: return this.#readStr(this.#getU8(), 1)\r\n\t\t\t\tcase TAG.STR_L2: return this.#readStr(this.#getU16(), 2)\r\n\t\t\t\tcase TAG.STR_L4: return this.#readStr(this.#getU32(), 4)\r\n\t\t\t}\r\n\t\t\tthrow new Error(`unsupported byte: ${b} (0x${b.toString(16)})`)\r\n\t\t}\r\n\t}\r\n\r\n\t#readArray() {\r\n\t\tconst arr = []\r\n\t\tconst prevArrType = this.#lastArrType\r\n\t\tthis.#lastArrType = arrTypeMap[prevArrType] ?? ArrType.UNKNOWN\r\n\t\tconst currArrType = this.#lastArrType\r\n\r\n\t\twhile (this.#pos < this.#bytes.length) {\r\n\t\t\t// when reading the array ends\r\n\t\t\tif (this.#bytes[this.#pos] == TAG.ARRAY_END) {\r\n\t\t\t\tthis.#pos++\r\n\t\t\t\tthis.#lastArrType = prevArrType\r\n\r\n\t\t\t\t// if the array read is a command array, return a Cmd instance instead of the array\r\n\t\t\t\tif (currArrType == ArrType.CMD) {\r\n\t\t\t\t\tif (arr[BuildCmdIndex.TYPE] === CmdType.BUILD)\r\n\t\t\t\t\t\treturn new BuildCmd().fillFromArray(arr)\r\n\t\t\t\t\tif (arr[ConfigCmdIndex.TYPE] === CmdType.CONFIG)\r\n\t\t\t\t\t\treturn new ConfigCmd().fillFromArray(arr)\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn arr\r\n\t\t\t}\r\n\t\t\tarr.push(this.#read())\r\n\t\t}\r\n\t}\r\n\r\n\t#readU8() {\r\n\t\tconst v = this.#view.getUint8(this.#pos)\r\n\t\tthis.#pos++\r\n\t\treturn v\r\n\t}\r\n\t#readU16() {\r\n\t\tconst v = this.#view.getUint16(this.#pos, true)\r\n\t\tthis.#pos += 2\r\n\t\treturn v\r\n\t}\r\n\t#readU32() {\r\n\t\tconst v = this.#view.getUint32(this.#pos, true)\r\n\t\tthis.#pos += 4\r\n\t\treturn v\r\n\t}\r\n\t#readU64() {\r\n\t\tconst v = this.#view.getBigUint64(this.#pos, true)\r\n\t\tthis.#pos += 8\r\n\t\treturn v\r\n\t}\r\n\r\n\t#readI8() {\r\n\t\tconst v = this.#view.getInt8(this.#pos)\r\n\t\tthis.#pos++\r\n\t\treturn v\r\n\t}\r\n\t#readI16() {\r\n\t\tconst v = this.#view.getInt16(this.#pos, true)\r\n\t\tthis.#pos += 2\r\n\t\treturn v\r\n\t}\r\n\t#readI32() {\r\n\t\tconst v = this.#view.getInt32(this.#pos, true)\r\n\t\tthis.#pos += 4\r\n\t\treturn v\r\n\t}\r\n\t#readI64() {\r\n\t\tconst v = this.#view.getBigInt64(this.#pos, true)\r\n\t\tthis.#pos += 8\r\n\t\treturn v\r\n\t}\r\n\r\n\t#readF32() {\r\n\t\tconst v = this.#view.getFloat32(this.#pos, true)\r\n\t\tthis.#pos += 4\r\n\t\treturn v\r\n\t}\r\n\t#readF64() {\r\n\t\tconst v = this.#view.getFloat64(this.#pos, true)\r\n\t\tthis.#pos += 8\r\n\t\treturn v\r\n\t}\r\n\r\n\t#getU8() {\r\n\t\treturn this.#view.getUint8(this.#pos)\r\n\t}\r\n\t#getU16() {\r\n\t\treturn this.#view.getUint16(this.#pos, true)\r\n\t}\r\n\t#getU32() {\r\n\t\treturn this.#view.getUint32(this.#pos, true)\r\n\t}\r\n\r\n\t#readStr(byteLength, headerOffset) {\r\n\t\tconst offset = this.#pos + headerOffset\r\n\t\tconst str = this.#textDecoder.decode(this.#bytes.slice(offset, offset + byteLength))\r\n\t\tthis.#pos += headerOffset + byteLength\r\n\t\treturn str\r\n\t}\r\n\r\n\r\n\t#readBytes(byteLength, headOffset) {\r\n\t\t// if reading a byte array in a cmd array, it is config data\r\n\t\tconst readConfig = this.options.ignoreConfigCmdData !== true && this.#lastArrType == ArrType.CMD\r\n\r\n\t\tconst offset = this.#pos + headOffset\r\n\t\tconst arr = this.#bytes.slice(offset, offset + byteLength)\r\n\t\tthis.#pos = offset\r\n\t\tif (readConfig)\r\n\t\t\treturn this.#read() // directly start decoding the bytes inside the byte array\r\n\t\tthis.#pos += byteLength\r\n\t\treturn arr\r\n\t}\r\n}\r\n", "import { deflateSync as fflate_deflateSync } from \"fflate\" // @build_browser-only\r\n\r\nimport { Blueprint } from \"./Blueprint.js\"\r\nimport { BuildCmd } from \"./BuildCmd.js\"\r\nimport { ConfigCmd } from \"./ConfigCmd.js\"\r\nimport { ConfigCmdIndex, TAG } from \"./constants.js\"\r\nimport { ui8tob64 } from \"./injBrowser.js\" // @build_browser-only\r\n\r\n/**\r\n * Internally created by the {@link encode} and\t{@link encodeSync} methods.\r\n * \r\n * There doesn't seem to be any benefit to using the same instance,\r\n * but it is possible to do so only with the sync method.\r\n */\r\nexport class Encoder {\r\n\t#textEncoder: TextEncoder\r\n\t#bytes: Uint8Array\r\n\t#view: DataView\r\n\t#pos: number\r\n\r\n\tconstructor() {\r\n\t\tthis.#textEncoder = new TextEncoder()\r\n\t}\r\n\r\n\t#init(size: number) {\r\n\t\tthis.#view = new DataView(new ArrayBuffer(size))\r\n\t\tthis.#bytes = new Uint8Array(this.#view.buffer)\r\n\t\tthis.#pos = 0\r\n\t}\r\n\r\n\r\n\tencodeSync(bp: Blueprint) {\r\n\t\tif (!(bp instanceof Blueprint))\r\n\t\t\tthrow new TypeError(`input must be an instance of ${Blueprint.name}`)\r\n\r\n\t\tconst initSize = bp.commands.length\r\n\t\t\t? Math.max(bp.commands.length * 20, 512) // rough estimate based on cmd amount\r\n\t\t\t: 4096\r\n\t\tthis.#init(initSize)\r\n\t\tthis.#write(bp.toArray(true))\r\n\r\n\t\tconst encoded = this.#bytes.slice(0, this.#pos)\r\n\r\n\t\tif (typeof zlib_deflateRawSync != \"undefined\") {\r\n\t\t\tconst deflated = zlib_deflateRawSync(encoded, { level: 9 })\r\n\t\t\treturn deflated.toString(\"base64\")\r\n\t\t} else {\r\n\t\t\tconst deflated = fflate_deflateSync(encoded, { level: 9 })\r\n\t\t\treturn ui8tob64(deflated)\r\n\t\t}\r\n\t}\r\n\r\n\t#encodeArray(arr) {\r\n\t\tthis.#init(128)\r\n\t\tthis.#write(arr)\r\n\t\treturn this.#bytes.slice(0, this.#pos)\r\n\t}\r\n\r\n\t#write(obj) {\r\n\t\tif (typeof obj == \"number\" || typeof obj == \"bigint\") {\r\n\t\t\tthis.#writeNumber(obj)\r\n\t\t} else if (typeof obj == \"boolean\") {\r\n\t\t\tthis.#writeU8(obj ? TAG.TRUE : TAG.FALSE)\r\n\t\t} else if (typeof obj == \"string\") {\r\n\t\t\tthis.#writeStr(obj)\r\n\t\t} else if (obj == null) {\r\n\t\t\tthis.#writeU8(TAG.NULL)\r\n\t\t} else if (Array.isArray(obj)) {\r\n\t\t\tthis.#writeArr(obj)\r\n\t\t} else if (obj instanceof Uint8Array) {\r\n\t\t\tthis.#writeBin(obj)\r\n\t\t} else if (obj instanceof BuildCmd) {\r\n\t\t\tthis.#writeArr(obj.toArray())\r\n\t\t} else if (obj instanceof ConfigCmd) {\r\n\t\t\tconst arr = obj.toArray()\r\n\t\t\tif (Array.isArray(arr[ConfigCmdIndex.DATA])) // it is not raw data, encode it\r\n\t\t\t\tarr[ConfigCmdIndex.DATA] = new Uint8Array(new Encoder().#encodeArray(arr[ConfigCmdIndex.DATA]))\r\n\t\t\tthis.#writeArr(arr)\r\n\t\t} else {\r\n\t\t\tthrow new Error(`unsupported object: ${obj.constructor?.name} ${obj}`)\r\n\t\t}\r\n\t}\r\n\r\n\t#writeNumber(v: number | bigint, isSigned?: boolean) {\r\n\t\tlet isBigInt = typeof v == \"bigint\"\r\n\t\tif (isBigInt && v <= 4294967295) {\r\n\t\t\tv = Number(v)\r\n\t\t\tisBigInt = false\r\n\t\t}\r\n\r\n\t\t// float\r\n\t\tif (!Number.isSafeInteger(v) && !isBigInt) {\r\n\t\t\tthis.#writeU8(TAG.F32) // game uses F32?\r\n\t\t\tthis.#writeF32(v)\r\n\t\t\treturn\r\n\t\t}\r\n\r\n\t\t// single-byte fixint\r\n\t\tif (v >= -64 && v <= -1)\r\n\t\t\treturn this.#writeI8(64 | ((v as number) & 127))\r\n\t\telse if (v >= 0 && v <= 63)\r\n\t\t\treturn this.#writeI8(v)\r\n\r\n\t\t// int\r\n\t\tif (v < 0 || isSigned) {\r\n\t\t\tif (-128 <= v && v <= 127) {\r\n\t\t\t\tthis.#writeU8(TAG.I8)\r\n\t\t\t\tthis.#writeU8(v)\r\n\t\t\t} else if (-32768 <= v && v <= 32767) {\r\n\t\t\t\tthis.#writeU8(TAG.I16)\r\n\t\t\t\tthis.#writeI16(v)\r\n\t\t\t} else if (-2147483648 <= v && v <= 2147483647) {\r\n\t\t\t\tthis.#writeU8(TAG.I32)\r\n\t\t\t\tthis.#writeI32(v)\r\n\t\t\t} else {\r\n\t\t\t\tthis.#writeU8(TAG.I64)\r\n\t\t\t\tthis.#writeI64(BigInt(v))\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tif (v <= 255) {\r\n\t\t\t\tthis.#writeU8(TAG.U8)\r\n\t\t\t\tthis.#writeU8(v)\r\n\t\t\t} else if (v <= 65535) {\r\n\t\t\t\tthis.#writeU8(TAG.U16)\r\n\t\t\t\tthis.#writeU16(v)\r\n\t\t\t} else if (v <= 4294967295) {\r\n\t\t\t\tthis.#writeU8(TAG.U32)\r\n\t\t\t\tthis.#writeU32(v)\r\n\t\t\t} else {\r\n\t\t\t\tthis.#writeU8(TAG.U64)\r\n\t\t\t\tthis.#writeU64(BigInt(v))\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t#writeStr(v) {\r\n\t\tconst utf8arr = this.#textEncoder.encode(v)\r\n\t\tconst len = utf8arr.byteLength\r\n\t\tif (len <= 255) {\r\n\t\t\tthis.#writeU8(TAG.STR_L1)\r\n\t\t\tthis.#writeU8(len)\r\n\t\t} else if (len <= 65535) {\r\n\t\t\tthis.#writeU8(TAG.STR_L2)\r\n\t\t\tthis.#writeU16(len)\r\n\t\t} else if (len <= 4294967295) {\r\n\t\t\tthis.#writeU8(TAG.STR_L4)\r\n\t\t\tthis.#writeU32(len)\r\n\t\t}\r\n\t\tthis.#ensureSize(len)\r\n\t\tthis.#bytes.set(utf8arr, this.#pos)\r\n\t\tthis.#pos += len\r\n\t}\r\n\r\n\t#writeArr(arr) {\r\n\t\tthis.#writeU8(TAG.ARRAY_BEGIN)\r\n\t\tfor (const v of arr)\r\n\t\t\tthis.#write(v)\r\n\t\tthis.#writeU8(TAG.ARRAY_END)\r\n\t}\r\n\r\n\t#writeBin(obj) {\r\n\t\tconst size = obj.byteLength\r\n\t\tif (size <= 255) {\r\n\t\t\tthis.#writeU8(TAG.BYTES_L1)\r\n\t\t\tthis.#writeU8(size)\r\n\t\t} else if (size <= 65535) {\r\n\t\t\tthis.#writeU8(TAG.BYTES_L2)\r\n\t\t\tthis.#writeU16(size)\r\n\t\t} else if (size <= 4294967295) {\r\n\t\t\tthis.#writeU8(TAG.BYTES_L4)\r\n\t\t\tthis.#writeU32(size)\r\n\t\t}\r\n\t\tthis.#writeU8arr(obj)\r\n\t}\r\n\r\n\t#writeU8(v) {\r\n\t\tthis.#ensureSize(1)\r\n\t\tthis.#view.setUint8(this.#pos, v)\r\n\t\tthis.#pos++\r\n\t}\r\n\t#writeU16(v) {\r\n\t\tthis.#ensureSize(2)\r\n\t\tthis.#view.setUint16(this.#pos, v, true)\r\n\t\tthis.#pos += 2\r\n\t}\r\n\t#writeU32(v) {\r\n\t\tthis.#ensureSize(4)\r\n\t\tthis.#view.setUint32(this.#pos, v, true)\r\n\t\tthis.#pos += 4\r\n\t}\r\n\t#writeU64(v) {\r\n\t\tthis.#ensureSize(8)\r\n\t\tthis.#view.setBigUint64(this.#pos, v, true)\r\n\t\tthis.#pos += 8\r\n\t}\r\n\r\n\t#writeI8(v) {\r\n\t\tthis.#ensureSize(1)\r\n\t\tthis.#view.setInt8(this.#pos, v)\r\n\t\tthis.#pos++\r\n\t}\r\n\t#writeI16(v) {\r\n\t\tthis.#ensureSize(2)\r\n\t\tthis.#view.setInt16(this.#pos, v, true)\r\n\t\tthis.#pos += 2\r\n\t}\r\n\t#writeI32(v) {\r\n\t\tthis.#ensureSize(4)\r\n\t\tthis.#view.setInt32(this.#pos, v, true)\r\n\t\tthis.#pos += 4\r\n\t}\r\n\t#writeI64(v) {\r\n\t\tthis.#ensureSize(8)\r\n\t\tthis.#view.setBigInt64(this.#pos, v, true)\r\n\t\tthis.#pos += 8\r\n\t}\r\n\r\n\t#writeF32(v) {\r\n\t\tthis.#ensureSize(4)\r\n\t\tthis.#view.setFloat32(this.#pos, v, true)\r\n\t\tthis.#pos += 4\r\n\t}\r\n\r\n\r\n\t#writeU8arr(values) {\r\n\t\tthis.#ensureSize(values.length)\r\n\t\tthis.#bytes.set(values, this.#pos)\r\n\t\tthis.#pos += values.length\r\n\t}\r\n\r\n\t#ensureSize(size) {\r\n\t\tconst req = this.#pos + size\r\n\t\tif (req <= this.#view.byteLength) return\r\n\r\n\t\tconst buff = new ArrayBuffer(Math.max(req, this.#view.byteLength + 128))\r\n\t\tconst bytes = new Uint8Array(buff)\r\n\t\tconst view = new DataView(buff)\r\n\t\tbytes.set(this.#bytes)\r\n\t\tthis.#view = view\r\n\t\tthis.#bytes = bytes\r\n\t}\r\n}\r\n", "\r\nimport { Blueprint } from \"./Blueprint.js\"\r\nimport { createWorker as browser_createWorker } from \"./injBrowser.js\" // @build_browser-only\r\n\r\n\r\nconst isNode = globalThis.process?.release?.name == \"node\"\r\nconst isWorkerThread = isNode ? !isMainThread : (typeof WorkerGlobalScope != \"undefined\" && self instanceof WorkerGlobalScope)\r\n\r\nlet wkMsgId = 0\r\nconst wkRequests = {}\r\n\r\nexport const worker = isWorkerThread ? null : (isNode ? node_createWorker : browser_createWorker)() as any\r\n\r\nfunction handleWkMessage(data: { id: number; result: any; err: any }) {\r\n\tif (data.err)\r\n\t\twkRequests[data.id].rej(data.err)\r\n\telse\r\n\t\twkRequests[data.id].res(data.result)\r\n\tdelete wkRequests[data.id]\r\n}\r\n\r\nif (!isWorkerThread) {\r\n\tif (isNode)\r\n\t\tworker.on(\"message\", handleWkMessage)\r\n\telse\r\n\t\tworker.addEventListener(\"message\", e => handleWkMessage(e.data))\r\n}\r\n\r\nfunction wkPromise(id: number) {\r\n\treturn new Promise((res, rej) => wkRequests[id] = { res, rej })\r\n}\r\n\r\nexport async function decodeAsync(input, options) {\r\n\tconst id = wkMsgId++\r\n\tworker.postMessage({ id, cmd: \"decode\", args: { input, options } })\r\n\treturn new Blueprint().fillFromArray(\r\n\t\tawait wkPromise(id) as any[]\r\n\t)\r\n}\r\n\r\nexport function decodeConfigCmdAsync(rawData) {\r\n\tconst id = wkMsgId++\r\n\tworker.postMessage({ id, cmd: \"decodeConfigCmd\", args: { rawData } })\r\n\treturn wkPromise(id) as Promise<any[]>\r\n}\r\n\r\nexport function encodeAsync(input: Blueprint) {\r\n\tconst id = wkMsgId++\r\n\tworker.postMessage({ id, cmd: \"encode\", args: { input: input.toArray() } })\r\n\treturn wkPromise(id) as Promise<string>\r\n}\r\n", "import { Blueprint } from \"./Blueprint.js\"\r\nimport { ConfigCmd } from \"./ConfigCmd.js\"\r\nimport { Decoder } from \"./Decoder.js\"\r\nimport { Encoder } from \"./Encoder.js\"\r\nimport { DecoderOptions } from \"./types.js\"\r\nimport * as util from \"./util.js\"\r\n\r\nexport { BPCmd } from \"./BPCmd.js\"\r\nexport { BuildBits } from \"./BuildBits.js\"\r\nexport { BuildCmd } from \"./BuildCmd.js\"\r\nexport { PREFIX } from \"./constants.js\"\r\nexport * from \"./types.js\"\r\nexport { Blueprint, ConfigCmd, Decoder, Encoder }\r\n\r\n/**\r\n * Synchronously decodes a blueprint string.\r\n * Supports the \"DSA:\" prefix (case-insensitive).\r\n * @param input The blueprint string.\r\n * @param options Decoding options.\r\n * @example\r\n * import { decodeSync } from \"dsabp-js\"\r\n * \r\n * const bp = decodeSync(str)\r\n */\r\nexport function decodeSync(input: string, options?: DecoderOptions) {\r\n\treturn new Decoder().decodeSync(input, options)\r\n}\r\n\r\n/**\r\n * Asynchronously decodes a blueprint string.\r\n * Supports the \"DSA:\" prefix (case-insensitive).\r\n * @param input The blueprint string.\r\n * @param options Decoding options.\r\n * @example\r\n * import { decode } from \"dsabp-js\"\r\n * \r\n * const bp = await decode(str)\r\n */\r\nexport async function decode(input: string, options?: DecoderOptions) {\r\n\treturn util.decodeAsync(input, options)\r\n}\r\n\r\n/**\r\n * Synchronously decodes the data of a {@link ConfigCmd} containing raw data.\r\n * @see {@link DecoderOptions.ignoreConfigCmdData} for more info.\r\n * @returns The same input instance, with decoded data.\r\n */\r\nexport function decodeConfigCmdSync(cmd: ConfigCmd) {\r\n\treturn new Decoder().decodeConfigCmdSync(cmd)\r\n}\r\n\r\n/**\r\n * Asynchronously decodes the data of a {@link ConfigCmd} containing raw data.\r\n * @see {@link DecoderOptions.ignoreConfigCmdData} for more info.\r\n * @returns The same input instance, with decoded data.\r\n */\r\nexport async function decodeConfigCmd(cmd: ConfigCmd) {\r\n\tif (!(cmd instanceof ConfigCmd))\r\n\t\tthrow new TypeError(`input must be a ${ConfigCmd.name}`)\r\n\tif (!cmd.isRaw) return cmd\r\n\tconst dataArr = await util.decodeConfigCmdAsync(cmd.rawData)\r\n\tcmd.rawData = undefined\r\n\treturn cmd.fillDataFromArray(dataArr)\r\n}\r\n\r\n/**\r\n * Synchronously encodes a {@link Blueprint} into a blueprint string.\r\n * Does not include the \"DSA:\" prefix, consider adding it on a public app.\r\n * @param input The blueprint to encode.\r\n * @example\r\n * import { encodeSync, PREFIX } from \"dsabp-js\"\r\n * \r\n * const str = PREFIX + encodeSync(bp)\r\n */\r\nexport function encodeSync(input: Blueprint) {\r\n\treturn new Encoder().encodeSync(input)\r\n}\r\n\r\n/**\r\n * Asynchronously encodes a {@link Blueprint} into a blueprint string.\r\n * Does not include the \"DSA:\" prefix, consider adding it on a public app.\r\n * @param input The blueprint to encode.\r\n * @example\r\n * import { encode, PREFIX } from \"dsabp-js\"\r\n * \r\n * const str = PREFIX + await encode(bp)\r\n */\r\nexport function encode(input: Blueprint) {\r\n\treturn util.encodeAsync(input)\r\n}\r\n"],
  "mappings": "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",
  "names": ["PusherMode", "LoaderPoint", "LoaderPriority", "FilterMode", "FixedAngle", "key", "err"]
}
